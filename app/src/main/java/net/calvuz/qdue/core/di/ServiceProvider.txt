package net.calvuz.qdue.core.di;

import net.calvuz.qdue.core.services.CalendarService;
import net.calvuz.qdue.core.services.EventsService;
import net.calvuz.qdue.core.services.UserService;
import net.calvuz.qdue.core.services.OrganizationService;
import net.calvuz.qdue.core.backup.CoreBackupManager;
import net.calvuz.qdue.domain.calendar.repositories.WorkScheduleRepository;

/**
 * Dependency injection interface for service providers
 */
public interface ServiceProvider {


    /**
     * Get CalendarService instance for work schedule and calendar operations.
     *
     * <p>Provides comprehensive calendar functionality including:
     * <ul>
     *   <li>Work schedule generation for users and teams</li>
     *   <li>Calendar event creation from schedules</li>
     *   <li>Team management and assignments</li>
     *   <li>Shift template management</li>
     *   <li>Exception handling for schedule modifications</li>
     * </ul>
     *
     * The service uses clean domain models with full localization support
     * and follows the OperationResult pattern for consistent error handling.
     *
     * @return CalendarService instance
     * @throws RuntimeException if service initialization fails
     */
    CalendarService getCalendarService();

    /**
     * Get EventsService instance
     */
    EventsService getEventsService();

    /**
     * Get UserService instance
     */
    UserService getUserService();

    /**
     * Get OrganizationService instance
     */
    OrganizationService getOrganizationService();

    /**
     * Get CoreBackupManager instance
     */
    CoreBackupManager getCoreBackupManager();

    WorkScheduleRepository getWorkScheduleService();

    /**
     * Initialize all services
     */
    void initializeServices();

    /**
     * Shutdown all services
     */
    void shutdownServices();

    /**
     * Check if services are ready
     */
    boolean areServicesReady();
}


